plugins {
    id 'myproject.java-conventions'
}

repositories {
    mavenCentral()
    maven {
        url "https://s3.us-east-1.amazonaws.com/us-east-1-emr-artifacts/emr-6.1.0/repos/maven/"
    }
    maven {
        url "https://maven.twttr.com/"
    }
    maven {
        name = "mridang"
        url = uri("https://maven.pkg.github.com/mridang/hudi")
        credentials {
            username = project.findProperty("githubUsername") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("githubPassword") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        name = "olsi"
        url = uri("https://maven.pkg.github.com/olsi-qose/testcontainers-minio")
        credentials {
            username = project.findProperty("githubUsername") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("githubPassword") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    modules {
        module('com.sun.jersey:jersey-server') {
            //noinspection GradlePackageUpdate
            replacedBy('org.glassfish.jersey.core:jersey-server')
        }
    }

    components.all(JacksonAlignmentRule)
    components.all(SparkAlignmentRule)
    components.all(HadoopAlignmentRule)
    components.all(HiveAlignmentRule)
    components.all(AWSAlignmentRule)

    implementation(project(':emr')) {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation(project(':commons')) {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    testImplementation project(':commons').sourceSets.test.output

    implementation(group: 'org.apache.spark', name: "spark-avro_${scalaVersion}", version: sparkVersion) {
        because 'since it is not included by default on EMR'
    }
    implementation group: 'org.apache.logging.log4j', name: "log4j-api-scala_${scalaVersion}", version: '12.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.2'
    implementation group: 'com.typesafe', name: 'config', version: '1.4.1'
    implementation(group: 'org.apache.hudi', name: "hudi-spark3-bundle_${scalaVersion}", version: '0.8.0-916-emr-6.1.0') {
        // We use the BloomFilter based index and and not HBase
        // https://hudi.apache.org/docs/0.8.0-configurations.html#index-configs
        exclude group: 'org.apache.hbase', module: 'hbase-server'
        exclude group: 'com.github.stephenc.findbugs', module: 'findbugs-annotations'
    }
    testImplementation group: 'com.dimafeng', name: 'testcontainers-scala-scalatest_2.12', version: '0.39.5'
    testImplementation group: 'org.testcontainers', name: 'scala-minio', version: '1.16.0'
    testImplementation group: 'com.holdenkarau', name: "spark-testing-base_${scalaVersion}", version: "${sparkVersion}_1.1.0"
}