plugins {
    id 'myproject.java-conventions'
    id 'myproject.scala-conventions'
}

java {
    sourceCompatibility "11"
    targetCompatibility "11"
}

repositories {
    mavenCentral()
    maven {
        url "https://s3.us-east-1.amazonaws.com/us-east-1-emr-artifacts/emr-6.1.0/repos/maven/"
    }
    maven {
        url "https://maven.twttr.com/"
    }
    maven {
        name = "olsi"
        url = uri("https://maven.pkg.github.com/olsi-qose/testcontainers-minio")
        credentials {
            username = project.findProperty("githubUsername") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("githubPassword") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    modules {
        module('com.sun.jersey:jersey-server') {
            //noinspection GradlePackageUpdate
            replacedBy('org.glassfish.jersey.core:jersey-server')
        }
    }

    components.all(JacksonAlignmentRule)
    components.all(SparkAlignmentRule)
    components.all(HadoopAlignmentRule)
    components.all(HiveAlignmentRule)
    components.all(AWSAlignmentRule)

    implementation(project(':emr'))
    implementation(project(':commons'))
    testImplementation project(':commons').sourceSets.test.output

    implementation(group: 'org.apache.spark', name: "spark-avro_${scalaVersion}", version: sparkVersion) {
        because 'since it is not included by default on EMR'
    }
    implementation group: 'org.apache.logging.log4j', name: "log4j-api-scala_${scalaVersion}", version: '12.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.2'
    implementation group: 'com.typesafe', name: 'config', version: '1.4.1'
    testImplementation group: 'com.holdenkarau', name: "spark-testing-base_${scalaVersion}", version: "${sparkVersion}_1.1.0"
    implementation (group: 'org.elasticsearch', name: 'elasticsearch-spark-30_2.12', version: '8.0.1') {
        exclude group: 'javax.xml.bind', module: 'jaxb-api'
    }
}

checkForDuplicateClasses {
    excludes(['LICENSE',
              'NOTICE',
              '.gitkeep',
              'git.properties',
              'plugin.xml',
              '\\.options',
              '.api_description',
              'jetty-dir.css',
              'yarn-default.xml',
              'plugin.properties',
              'log4j-surefire-quiet.properties',
              'log4j-surefire.properties',
              'encoding.properties',
              'log4j.properties',
              '^com/sun/.*',
              '^javax/.*',
              '^org/slf4j/*',
              '^org/apache/commons/*',
              'org/aopalliance/*',
              'codegen/config.fmpp',
              '.proto$',
              'webapps/static/.*',
              'spire/scalacompat/BuilderCompat.class',
              'spire/scalacompat/package\\$.class',
              'spire/scalacompat/package\\$FactoryCompatOps.class',
              'spire/scalacompat/IterableLikeCompat.class',
              'spire/scalacompat/ScalaOrderingWrapperCompat.class',
              'spire/scalacompat/package.class',
              'org/apache/spark/unused/UnusedStubClass.class',
              'org/apache/jasper/compiler/Localizer.class',
              'org/apache/hadoop/hive/common/ValidTxnList\\$RangeResponse.class',
              'org/apache/hadoop/hive/common/ValidReadTxnList.class',
              'org/apache/hadoop/hive/common/ValidTxnList.class',
              'org/fusesource/hawtjni/runtime/.*.class'])
}
