version: '3'
services:
  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - "37017:27017"
  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - ./.docker/storage/minio:/data
    environment:
      MINIO_ACCESS_KEY: minio_username
      MINIO_SECRET_KEY: minio_password
    command: server --address :9999 /data
    labels:
      - "traefik.http.routers.minio.rule=Host(`minio.docker.localhost`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9999"
  spark-master:
    build: emr/docker/spark/master
    container_name: spark-master
    depends_on:
      - mongo
      - minio
    ports:
      # The HTTP port
      - "8085:8080"
      # The master port
      - "7077:7077"
      # Main port
      - "4041:4040"
      # Historu port  
      - "18081:18080"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    labels:
      # The Spark UI port which shows the master status and the status
      # of all the attached executors
      - "traefik.http.routers.master.rule=Host(`spark.docker.localhost`)"
      - "traefik.http.routers.master.service=spark"
      - "traefik.http.services.spark.loadbalancer.server.port=8080"
      # The Spark WebUI port which shows the status of the running jobs
      # This is only accessible when a job is running or you're running
      # a Spark shell
      - "traefik.http.routers.webui.rule=Host(`webui.spark.docker.localhost`)"
      - "traefik.http.routers.webui.service=webui"
      - "traefik.http.services.webui.loadbalancer.server.port=4040"
      # The Spark History Server UI port which shows the status of completed
      # jobs.
      # This is only accessible when a job is running or you're running
      # a Spark shell
      - "traefik.http.routers.history.rule=Host(`history.spark.docker.localhost`)"
      - "traefik.http.routers.history.service=history"
      - "traefik.http.services.history.loadbalancer.server.port=18080"
  spark-worker-1:
    build: emr/docker/spark/slave
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  zeppelin:
    image: apache/zeppelin:0.9.0
    container_name: zeppelin
    depends_on:
      - spark-master  
      - spark-worker-1
    environment:
      - "MASTER=spark://spark-master:7077"
      - "SPARK_MASTER=spark://spark-master:7077"
    labels:
      - "traefik.http.routers.zeppelin.rule=Host(`zeppelin.docker.localhost`)"
  reverse-proxy:
    image: traefik:v2.5
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal" 